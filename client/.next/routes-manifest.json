{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/gigs/[slug]",
      "regex": "^/gigs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/gigs/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/order/[id]",
      "regex": "^/order/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/order/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/profile/[username]",
      "regex": "^/profile/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPusername": "nxtPusername"
      },
      "namedRegex": "^/profile/(?<nxtPusername>[^/]+?)(?:/)?$"
    },
    {
      "page": "/seller/gigs/[slug]",
      "regex": "^/seller/gigs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/seller/gigs/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/seller/gigs/[slug]/edit",
      "regex": "^/seller/gigs/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/seller/gigs/(?<nxtPslug>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/services/[slug]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/services/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/browse",
      "regex": "^/browse(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/browse(?:/)?$"
    },
    {
      "page": "/careers",
      "regex": "^/careers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/careers(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/enterprise",
      "regex": "^/enterprise(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/enterprise(?:/)?$"
    },
    {
      "page": "/help",
      "regex": "^/help(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/help(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/orders",
      "regex": "^/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orders(?:/)?$"
    },
    {
      "page": "/press",
      "regex": "^/press(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/press(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/reset-password",
      "regex": "^/reset\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reset\\-password(?:/)?$"
    },
    {
      "page": "/saved",
      "regex": "^/saved(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/saved(?:/)?$"
    },
    {
      "page": "/security",
      "regex": "^/security(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/security(?:/)?$"
    },
    {
      "page": "/seller/dashboard",
      "regex": "^/seller/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/dashboard(?:/)?$"
    },
    {
      "page": "/seller/gigs",
      "regex": "^/seller/gigs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/gigs(?:/)?$"
    },
    {
      "page": "/seller/gigs/new",
      "regex": "^/seller/gigs/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/gigs/new(?:/)?$"
    },
    {
      "page": "/seller/orders",
      "regex": "^/seller/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/orders(?:/)?$"
    },
    {
      "page": "/seller/payouts",
      "regex": "^/seller/payouts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/seller/payouts(?:/)?$"
    },
    {
      "page": "/signup-success",
      "regex": "^/signup\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup\\-success(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}