// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  const handler = {} as typeof import("../../src/app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../src/app/account/page.tsx
{
  const handler = {} as typeof import("../../src/app/account/page.js")
  handler satisfies AppPageConfig<"/account">
}

// Validate ../../src/app/browse/page.tsx
{
  const handler = {} as typeof import("../../src/app/browse/page.js")
  handler satisfies AppPageConfig<"/browse">
}

// Validate ../../src/app/careers/page.tsx
{
  const handler = {} as typeof import("../../src/app/careers/page.js")
  handler satisfies AppPageConfig<"/careers">
}

// Validate ../../src/app/checkout/page.tsx
{
  const handler = {} as typeof import("../../src/app/checkout/page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ../../src/app/contact/page.tsx
{
  const handler = {} as typeof import("../../src/app/contact/page.js")
  handler satisfies AppPageConfig<"/contact">
}

// Validate ../../src/app/enterprise/page.tsx
{
  const handler = {} as typeof import("../../src/app/enterprise/page.js")
  handler satisfies AppPageConfig<"/enterprise">
}

// Validate ../../src/app/gigs/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/gigs/[slug]/page.js")
  handler satisfies AppPageConfig<"/gigs/[slug]">
}

// Validate ../../src/app/help/page.tsx
{
  const handler = {} as typeof import("../../src/app/help/page.js")
  handler satisfies AppPageConfig<"/help">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/order/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/order/[id]/page.js")
  handler satisfies AppPageConfig<"/order/[id]">
}

// Validate ../../src/app/orders/page.tsx
{
  const handler = {} as typeof import("../../src/app/orders/page.js")
  handler satisfies AppPageConfig<"/orders">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/press/page.tsx
{
  const handler = {} as typeof import("../../src/app/press/page.js")
  handler satisfies AppPageConfig<"/press">
}

// Validate ../../src/app/privacy/page.tsx
{
  const handler = {} as typeof import("../../src/app/privacy/page.js")
  handler satisfies AppPageConfig<"/privacy">
}

// Validate ../../src/app/profile/[username]/page.tsx
{
  const handler = {} as typeof import("../../src/app/profile/[username]/page.js")
  handler satisfies AppPageConfig<"/profile/[username]">
}

// Validate ../../src/app/reset-password/page.tsx
{
  const handler = {} as typeof import("../../src/app/reset-password/page.js")
  handler satisfies AppPageConfig<"/reset-password">
}

// Validate ../../src/app/saved/page.tsx
{
  const handler = {} as typeof import("../../src/app/saved/page.js")
  handler satisfies AppPageConfig<"/saved">
}

// Validate ../../src/app/security/page.tsx
{
  const handler = {} as typeof import("../../src/app/security/page.js")
  handler satisfies AppPageConfig<"/security">
}

// Validate ../../src/app/seller/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/dashboard/page.js")
  handler satisfies AppPageConfig<"/seller/dashboard">
}

// Validate ../../src/app/seller/gigs/[slug]/edit/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/gigs/[slug]/edit/page.js")
  handler satisfies AppPageConfig<"/seller/gigs/[slug]/edit">
}

// Validate ../../src/app/seller/gigs/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/gigs/[slug]/page.js")
  handler satisfies AppPageConfig<"/seller/gigs/[slug]">
}

// Validate ../../src/app/seller/gigs/new/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/gigs/new/page.js")
  handler satisfies AppPageConfig<"/seller/gigs/new">
}

// Validate ../../src/app/seller/gigs/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/gigs/page.js")
  handler satisfies AppPageConfig<"/seller/gigs">
}

// Validate ../../src/app/seller/orders/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/orders/page.js")
  handler satisfies AppPageConfig<"/seller/orders">
}

// Validate ../../src/app/seller/payouts/page.tsx
{
  const handler = {} as typeof import("../../src/app/seller/payouts/page.js")
  handler satisfies AppPageConfig<"/seller/payouts">
}

// Validate ../../src/app/services/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/services/[slug]/page.js")
  handler satisfies AppPageConfig<"/services/[slug]">
}

// Validate ../../src/app/signup-success/page.tsx
{
  const handler = {} as typeof import("../../src/app/signup-success/page.js")
  handler satisfies AppPageConfig<"/signup-success">
}

// Validate ../../src/app/terms/page.tsx
{
  const handler = {} as typeof import("../../src/app/terms/page.js")
  handler satisfies AppPageConfig<"/terms">
}

// Validate ../../src/app/api/checkout/route.ts
{
  const handler = {} as typeof import("../../src/app/api/checkout/route.js")
  handler satisfies RouteHandlerConfig<"/api/checkout">
}

// Validate ../../src/app/api/gigs/route.ts
{
  const handler = {} as typeof import("../../src/app/api/gigs/route.js")
  handler satisfies RouteHandlerConfig<"/api/gigs">
}

// Validate ../../src/app/api/lib/route.ts
{
  const handler = {} as typeof import("../../src/app/api/lib/route.js")
  handler satisfies RouteHandlerConfig<"/api/lib">
}

// Validate ../../src/app/api/messages/route.ts
{
  const handler = {} as typeof import("../../src/app/api/messages/route.js")
  handler satisfies RouteHandlerConfig<"/api/messages">
}

// Validate ../../src/app/api/profile/init/route.ts
{
  const handler = {} as typeof import("../../src/app/api/profile/init/route.js")
  handler satisfies RouteHandlerConfig<"/api/profile/init">
}

// Validate ../../src/app/api/profile/me/route.ts
{
  const handler = {} as typeof import("../../src/app/api/profile/me/route.js")
  handler satisfies RouteHandlerConfig<"/api/profile/me">
}

// Validate ../../src/app/api/reviews/route.ts
{
  const handler = {} as typeof import("../../src/app/api/reviews/route.js")
  handler satisfies RouteHandlerConfig<"/api/reviews">
}

// Validate ../../src/app/api/stripe/connect/route.ts
{
  const handler = {} as typeof import("../../src/app/api/stripe/connect/route.js")
  handler satisfies RouteHandlerConfig<"/api/stripe/connect">
}

// Validate ../../src/app/api/stripe/webhook/route.ts
{
  const handler = {} as typeof import("../../src/app/api/stripe/webhook/route.js")
  handler satisfies RouteHandlerConfig<"/api/stripe/webhook">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
