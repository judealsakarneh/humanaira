// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/account" | "/browse" | "/careers" | "/checkout" | "/contact" | "/enterprise" | "/gigs/[slug]" | "/help" | "/login" | "/order/[id]" | "/orders" | "/press" | "/privacy" | "/profile/[username]" | "/reset-password" | "/saved" | "/security" | "/seller/dashboard" | "/seller/gigs" | "/seller/gigs/[slug]" | "/seller/gigs/[slug]/edit" | "/seller/gigs/new" | "/seller/orders" | "/seller/payouts" | "/services/[slug]" | "/signup-success" | "/terms"
type AppRouteHandlerRoutes = "/api/checkout" | "/api/gigs" | "/api/lib" | "/api/messages" | "/api/profile/init" | "/api/profile/me" | "/api/reviews" | "/api/signout" | "/api/stripe/connect" | "/api/stripe/webhook"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/account": {}
  "/api/checkout": {}
  "/api/gigs": {}
  "/api/lib": {}
  "/api/messages": {}
  "/api/profile/init": {}
  "/api/profile/me": {}
  "/api/reviews": {}
  "/api/signout": {}
  "/api/stripe/connect": {}
  "/api/stripe/webhook": {}
  "/browse": {}
  "/careers": {}
  "/checkout": {}
  "/contact": {}
  "/enterprise": {}
  "/gigs/[slug]": { "slug": string; }
  "/help": {}
  "/login": {}
  "/order/[id]": { "id": string; }
  "/orders": {}
  "/press": {}
  "/privacy": {}
  "/profile/[username]": { "username": string; }
  "/reset-password": {}
  "/saved": {}
  "/security": {}
  "/seller/dashboard": {}
  "/seller/gigs": {}
  "/seller/gigs/[slug]": { "slug": string; }
  "/seller/gigs/[slug]/edit": { "slug": string; }
  "/seller/gigs/new": {}
  "/seller/orders": {}
  "/seller/payouts": {}
  "/services/[slug]": { "slug": string; }
  "/signup-success": {}
  "/terms": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
